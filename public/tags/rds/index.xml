<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rds on My Tech Blog</title>
    <link>https://www.vishnu-tech.com/tags/rds/index.xml</link>
    <description>Recent content in Rds on My Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://www.vishnu-tech.com/tags/rds/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>RDS CLI Tools Setup</title>
      <link>https://www.vishnu-tech.com/blog/rds-cli-tools-setup/</link>
      <pubDate>Mon, 10 Dec 2012 10:19:59 +0000</pubDate>
      
      <guid>https://www.vishnu-tech.com/blog/rds-cli-tools-setup/</guid>
      <description>

&lt;p&gt;#cd /usr/local/rds
#chmod 744 bin/*&lt;/p&gt;

&lt;p&gt;Setup Credentials into the file to use a default AWS Account —
$ cd /usr/local/rds
$ sudo cp credential-file-path.template credential-file
$ sudo vi credential-file
$ sudo chmod 600 /usr/local/aws/rds/credential-file&lt;/p&gt;

&lt;p&gt;Now add to the ~/.bashrc&lt;/p&gt;

&lt;h1 id=&#34;set-location-of-the-ec2-and-rds-command-line-tools&#34;&gt;Set location of the ec2 and rds command line tools&lt;/h1&gt;

&lt;p&gt;export EC2_HOME=/usr
export AWS_RDS_HOME=/usr/local/aws/rds&lt;/p&gt;

&lt;h1 id=&#34;set-aws-path&#34;&gt;Set AWS path&lt;/h1&gt;

&lt;p&gt;export PATH=$PATH:$EC2_HOME/bin:$AWS_RDS_HOME/bin&lt;/p&gt;

&lt;p&gt;Source the .bashrc file —
$ source .bashrc&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&#34;http://domino.symetrikdesign.com/2011/04/28/installing-amazon-rds-command-line-toolkit-on-ubuntu-10-04/&#34;&gt;Reference Link 1&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RDS Sharding &amp; Quick Commands</title>
      <link>https://www.vishnu-tech.com/blog/rds-sharding-quick-commands/</link>
      <pubDate>Mon, 10 Dec 2012 10:17:11 +0000</pubDate>
      
      <guid>https://www.vishnu-tech.com/blog/rds-sharding-quick-commands/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://aws.amazon.com/articles/0040302286264415#virtualshards&#34;&gt;Source article on RDS sharding by Amazon.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://aws.amazon.com/articles/0040302286264415#virtualshards&#34;&gt;http://aws.amazon.com/articles/0040302286264415#virtualshards&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://searchcloudcomputing.techtarget.com/definition/sharding&#34;&gt;What is sharding?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here unlike ec2 instances there is no rds-db-instance-id instead we use the db-instance names (called as dbinstance_identifiers) in our rds commmands to identify among rds-db-instances.&lt;/p&gt;

&lt;p&gt;Example-
Database Name – news
RDS DB Instances – shard1, shard2&lt;/p&gt;

&lt;p&gt;Consider creating 2 db-shards ie we need 2 db-instance to map those db-shards to db-instances. To reduce the schema setup overhead we use the snapshot and restore capabilities of Amazon RDS to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a single “seed” DB Instance.&lt;/li&gt;
&lt;li&gt;Set up the schema on that database.&lt;/li&gt;
&lt;li&gt;Snapshot the database.&lt;/li&gt;
&lt;li&gt;Create more databases from that snapshot using the RDS RestoreDBInstanceFromSnapshot API.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;1.Create SEED DATABASE INSTANCE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_#rds-create-db-instance shard1 –engine mysql5.1 –master-username unni –master-user-password 123 –allocated-storage 5 –db-instance-class db.t1.micro –db-name news –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;$$output$$
DBINSTANCE  shard1  db.t1.micro  mysql  5  unni  creating  1  ****  n  5.1.63  general-public-license
SECGROUP  default  active
PARAMGRP  default.mysql5.1  in-sync
OPTIONGROUP  default:mysql-5-1  in-sync&lt;/p&gt;

&lt;p&gt;Add IP address to DB Security Group to gain access
1.Find IP from www.whatismyipaddress.com – say its – 122.174.199.204
2.Add the CIDR – 122.174.199.&lt;sup&gt;204&lt;/sup&gt;&amp;frasl;&lt;sub&gt;32&lt;/sub&gt; in the DB-Security Group
3.Try gaining access to rds by – #mysql -h shard1.covaztmm6tup.eu-west-1.rds.amazonaws.com -u unni -p123&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.SETUP SCHEMA ON THE DB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;mysql&amp;gt;show database;
mysql&amp;gt;use news;
mysql&amp;gt;CREATE TABLE articles (
article_id numeric(64,0) NOT NULL PRIMARY KEY,
category char(13),
CHECK category IN (‘BUSINESS’, ‘ENTERTAINMENT’, ‘HEALTH’, ‘SCIENCE’, ‘SPORTS’, ‘TECHNOLOGY’, ‘WORLD’),
title char(128),
submit_time timestamp
);&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.SNAPSHOT and CREATE OTHER DB INSTANCES&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_#rds-create-db-snapshot shard1 –db-snapshot-identifier news-seed-database –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;$$output$$
DBSNAPSHOT  news-seed-database  shard1  2012-09-04T12:02:30.129Z  mysql  5  creating  unni  5.1.63  general-public-license  manual&lt;/p&gt;

&lt;p&gt;Once the snapshot is available it can be used to create any number of DB Instances. We’re only creating two DB Instances in this example, but it could easily be many more. Also, for our trivial setup, the only efficiency we gain is that we don’t need to create the schema on each. However, in a typical scenario there might be a lot more setup involved in creating the seed (e.g., application configuration data, user accounts, permissions, etc.).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.DB-INSTANCE FROM DB-SNAPSHOT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The following command can be used to create new DB Instances from the seed snapshot:&lt;/p&gt;

&lt;p&gt;_#rds-restore-db-instance-from-db-snapshot shard2 –db-snapshot-identifier news-seed-database –db-instance-class db.t1.micro –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;$$output$$
DBINSTANCE  shard2  db.t1.micro  mysql  5  unni  creating  1  n  5.1.63  general-public-license
SECGROUP  default  active
PARAMGRP  default.mysql5.1  in-sync
OPTIONGROUP  default:mysql-5-1  pending&lt;/p&gt;

&lt;p&gt;—————–&lt;/p&gt;

&lt;p&gt;To LIST RDS-INSTANCES
_#rds-describe-db-instances –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;TO DELETE RDS-INSTANCE with FINAL SNAPSHOT
_#rds-delete-db-instance shard1 –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem –final-db-snapshot-identifier shard-final-snapshot&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;TO DELETE RDS-INSTANCE without FINAL SNAPSHOT
_#rds-delete-db-instance shard2 –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem –skip-final-snapshot&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;TO LIST RDS-DB-SNAPSHOTS
_#rds-describe-db-snapshots –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;TO DELETE RDS-DB-SNAPSHOTS
_#rds-delete-db-snapshot shard-final-snapshot –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;NOTE
Creating a final snapshot (before dbinstance termination) incurs additional storage fees.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RDS Scaling</title>
      <link>https://www.vishnu-tech.com/blog/rds-scaling/</link>
      <pubDate>Mon, 10 Dec 2012 07:29:43 +0000</pubDate>
      
      <guid>https://www.vishnu-tech.com/blog/rds-scaling/</guid>
      <description>&lt;p&gt;If your app gets to the point that you need to start scaling either up or out, it is a good idea to switch to multi-AZ if you don’t run it already. If you have a simple RDS instance, you will degrade your service significantly while scaling, as you can expect to lose the ability to write and/or read. With multi-AZ RDS instances, your service is almost uninterrupted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scaling Up (or Down)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Scaling up is so easy it is almost ridiculous. The only drawback is that you have some downtime during the operation. If you don’t have multi-AZ enabled, the downtime of your RDS instance could be several minutes, as you have to wait until a new instance is launched and fully functional. For multi-AZ RDS instances, you will experience some downtime as a failover is initiated after the slave has been scaled up (or down). This failover doesn’t take more than a minute most of the time.&lt;/p&gt;

&lt;p&gt;If you initiate a scaling activity via the Console, make sure you enable Apply Immediately if you are in a hurry. If you don’t, scaling will take place during the scheduled maintenance period&lt;/p&gt;

&lt;p&gt;Scaling using the command-line tools is a two-step process. First scale, and then reboot:&lt;/p&gt;

&lt;p&gt;$ rds-modify-db-instance production –db-instance-class db.m1.xlarge –apply-immediately
$ rds-reboot-db-instance production&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scaling Out&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can scale out a relational database in two different ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using read-only slaves (read replicas in AWS)&lt;/li&gt;
&lt;li&gt;Sharding or partitioning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are still some hard problems to solve, as sharding/partitioning has not been addressed yet with RDS. Master-slave type scaling is available, though. A slave, or read replica, is easily created from the Console. The only requirement on the master RDS instance is that backups are not disabled by setting the backup retention period to 0. Currently, you can have up to five read replicas that you have to launch one by one. Amazon is working on the ability to launch multiple replicas at once, but that is not yet available.&lt;/p&gt;

&lt;p&gt;On a multi-AZ RDS instance, launching a read replica goes unnoticed. A snapshot is taken from the standby, the replica is launched, and when it is ready, it starts to catch up with the master. For a normal RDS instance, there is a brief I/O suspension in the order of one minute. AWS advises to use the same instance classes, as differing classes may incur replica lag. With read replicas, you basically introduce eventual consistency in your database (cluster).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ELB and Autoscaling in AWS</title>
      <link>https://www.vishnu-tech.com/blog/elb-and-autoscaling-in-aws/</link>
      <pubDate>Mon, 10 Dec 2012 07:27:56 +0000</pubDate>
      
      <guid>https://www.vishnu-tech.com/blog/elb-and-autoscaling-in-aws/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Installing ELB and Autoscale API tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;export AWS_ELB_HOME=/home/users/unni/bashrc/elbtool/ElasticLoadBalancing-1.0.12.0
export PATH=$PATH:$AWS_ELB_HOME/bin
export AWS_AUTO_SCALING_HOME=/home/users/unni/bashrc/auto/AutoScaling-1.0.33.1
export PATH=$PATH:$AWS_AUTO_SCALING_HOME/bin&lt;/p&gt;

&lt;h1 id=&#34;autoscaling&#34;&gt;AUTOSCALING&lt;/h1&gt;

&lt;p&gt;Create AS, Create AS Group and Setup Scaleup Parameter.&lt;/p&gt;

&lt;p&gt;#as-create-launch-config as-agile –region eu-west-1 –image-id ami-b123456 –instance-type t1.micro –key elbtest –group default -K ec2_certs/pk-K4.pem -C ec2_certs/cert-K4.pem&lt;/p&gt;

&lt;p&gt;OK-Created launch config&lt;/p&gt;

&lt;p&gt;_#as-create-auto-scaling-group as-agile-gp –launch-configuration as-agile –region eu-west-1 –availability-zones eu-west-1a,eu-west-1b –min-size 2 –max-size 3 –load-balancers elbtest-agile -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;OK-Created AutoScalingGroup&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;#as-create-or-update-trigger awsauto-nixontr –auto-scaling-group awsauto-nixongp –namespace “AWS/EC2″ –measure CPUUtilization –statistic Average –dimensions “AutoScalingGroupName=awsauto-nixongp” –period 60 –lower-threshold 40 –upper-threshold 80 –lower-breach-increment”=-1″ –upper-breach-increment 1 –breach-duration 1200 -K pk-XN.pem -C cert-XN.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;OK-Created/Updated trigger&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;elastic-load-balancer&#34;&gt;ELASTIC LOAD BALANCER&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Create n Configure ELB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_#elb-create-lb elbtest-agile –region eu-west-1 –availability-zones eu-west-1a,eu-west-1b –headers –listener “lb-port=80,instance-port=80,protocol=http” –listener “lb-port=443,instance-port=443,protocol=tcp” -K ec2_certs/pk-KO.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;_DNS_NAME DNS&lt;em&gt;NAME&lt;/em&gt;
_DNS&lt;em&gt;NAME elbtest-agile-1809496912.eu-west-1.elb.amazonaws.com&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;_#elb-configure-healthcheck elbtest-agile –region eu-west-1 –headers –target “HTTP:80/index.html” –interval 5 –timeout 3 –unhealthy-threshold 2 –healthy-threshold 2 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;_HEALTH_CHECK TARGET INTERVAL TIMEOUT HEALTHY_THRESHOLD UNHEALTHY&lt;em&gt;THRESHOLD&lt;/em&gt;
_HEALTH&lt;em&gt;CHECK HTTP:80/index.html 5 3 2 2&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add Instances to ELB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_#elb-register-instances-with-lb elbtest-agile –instances i-A123456 –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To LIST ELBs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;#elb-describe-lbs –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2_certs/cert-K4.pem
LOAD_BALANCER elbtest-agile elbtest-agile-1809496912.eu-west-1.elb.amazonaws.com elbtest-agile-1809496912.eu-west-1.elb.amazonaws.com Z3NF1Z3NOM5OY2 2012-07-19T09:49:19.110Z&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;deletions&#34;&gt; DELETIONS&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;1.Delete Trigger&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;#as-delete-trigger awsauto-nixontrtest –auto-scaling-group awsauto-nixongptest –region eu-west-1&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;DEPRECATED: This command is deprecated and included only to facilitate migration to the new trigger mechanism. You should use this command for migration purposes only.&lt;/p&gt;

&lt;p&gt;Are you sure you want to delete this trigger? [Ny]y
OK-Deleted trigger&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Set Autoscale to 0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_#as-update-auto-scaling-group as-agile-gp –region eu-west-1 –launch-configuration as-agile –min-size 0 –max-size 0 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;OK-Updated AutoScalingGroup&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Delete Autoscale Group&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_#as-delete-auto-scaling-group as-agile-gp –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;OK-Deleted AutoScalingGroup&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.Delete Autoscale Config&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_#as-delete-launch-config as-agile –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Are you sure you want to delete this launch configuration? [Ny]y
OK-Deleted launch configuration&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.Finally Delete ELB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_#elb-delete-lb elbtest-agile –region eu-west-1 -K ec2_certs/pk-K4.pem -C ec2&lt;em&gt;certs/cert-K4.pem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Warning: Deleting a LoadBalancer can lead to service disruption to any
customers connected to the LoadBalancer. Are you sure you want to delete
this LoadBalancer? [Ny]y
OK-Deleting LoadBalancer&lt;/p&gt;

&lt;p&gt;The Following commands will list out Autoscale Related Info —
as-describe-auto-scaling-groups
as-describe-auto-scaling-instances
as-describe-launch-configs
as-describe-triggers [AutoScalingGroupName]&lt;/p&gt;

&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.amazonwebservices.com/ElasticLoadBalancing/latest/DeveloperGuide/UsingTheCommandLineTools.html&#34;&gt;AWS Link To Download &amp;amp; Install ELB Command Line&lt;/a&gt;
&lt;a href=&#34;http://aws.amazon.com/elasticloadbalancing/&#34;&gt;ELB Quick Reference Link&lt;/a&gt;
&lt;a href=&#34;http://www.linuxhelp.in/2012/05/amazon-elastic-load-balancing-with.html&#34;&gt;ELB external Reference&lt;/a&gt;
&lt;a href=&#34;http://www.youtube.com/watch?v=8KQ8aLoxVi0&amp;amp;feature=related&#34;&gt;Check Amazon Youtube video on ELB&lt;/a&gt;
&lt;a href=&#34;http://www.youtube.com/watch?v=ainDIPzVM84&#34;&gt;Check Youtube video on Autoscale&lt;/a&gt;
&lt;a href=&#34;http://alestic.com/2012/09/aws-command-line-tools?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A+alestic+%28Alestic.com+-+Ubuntu+on+EC2%29&#34;&gt;Alestic Lists out all AWS Tools download&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>